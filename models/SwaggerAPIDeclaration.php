<?php
namespace app\models;

use yii\base\Model;
use Yii;

/**
 * Swagger API Declaration as read from URL
 * @link https://github.com/swagger-api/swagger-spec/blob/master/versions/1.2.md#52-api-declaration
 */
class SwaggerAPIDeclaration extends Model
{
    /**
     * @var string
     * @required
     * Specifies the Swagger Specification version being used. It can be used by the Swagger UI and other clients to interpret the API listing. The value MUST be an existing Swagger specification version.
     * Currently, "1.0", "1.1", "1.2" are valid values.
     */
    public $swaggerVersion;

    /**
     * @var string
     * Provides the version of the application API (not to be confused by the specification version).
     */
    public $apiVersion;

    /**
     * @var string
     * The root URL serving the API. This field is important because while it is common to have the Resource Listing and API Declarations on the server providing the APIs themselves, it is not a requirement. The API specifications can be served using static files and not generated by the API server itself, so the URL for serving the API cannot always be derived from the URL serving the API specification. The value SHOULD be in the format of a URL.
     */
    public $basePath;

    /**
     * @var string
     * The relative path to the resource, from the basePath, which this API Specification describes. The value MUST precede with a forward slash ("/").
     */
    public $resourcePath;

    /**
     * @var SwaggerAPIObject[]
     * @required
     *  A list of the APIs exposed on this resource. There MUST NOT be more than one API Object per path in the array.
     */
    public $apis;

    /**
     * @var SwaggerModelsObject
     * A list of the models available to this resource. Note that these need to be exposed separately for each API Declaration.
     */
    public $models;

    /**
     * @var string[]
     * A list of MIME types the APIs on this resource can produce. This is global to all APIs but can be overridden on specific API calls.
     */
    public $produces;

    /**
     * @var string[]
     * A list of MIME types the APIs on this resource can consume. This is global to all APIs but can be overridden on specific API calls.
     */
    public $consumes;

    /**
     * @var SwaggerAuthorizationsObject
     * A list of authorizations schemes required for the operations listed in this API declaration. Individual operations may override this setting. If there are multiple authorization schemes described here, it means they're all applied.
     */
    public $authorizations;
}

/**
 * Swagger API Object
 * @link https://github.com/swagger-api/swagger-spec/blob/master/versions/1.2.md#522-api-object
 */
class SwaggerAPIObject extends Model
{
    /**
     * @var string
     * @required
     * The relative path to the operation, from the basePath, which this operation describes. The value SHOULD be in a relative (URL) path format.
     */
    public $path;

    /**
     * @var string
     * Recommended. A short description of the resource.
     */
    public $description;

    /**
     * @var SwaggerOperationObject[]
     * @required
     * A list of the API operations available on this path. The array may include 0 or more operations. There MUST NOT be more than one Operation Object per method in the array.
     */
    public $operations;
}

/**
 * Swagger Operation Object
 * @link https://github.com/swagger-api/swagger-spec/blob/master/versions/1.2.md#523-operation-object
 */
class SwaggerOperationObject extends Model
{
    /**
     * @var string
     * @required
     * The HTTP method required to invoke this operation. The value MUST be one of the following values: "GET", "HEAD", "POST", "PUT", "PATCH", "DELETE", "OPTIONS". The values MUST be in uppercase.
     */
    public $method;

    /**
     * @var string
     * A short summary of what the operation does. For maximum readability in the swagger-ui, this field SHOULD be less than 120 characters.
     */
    public $summary;

    /**
     * @var string
     * A verbose explanation of the operation behavior.
     */
    public $notes;

    /**
     * @var string
     * @required
     * A unique id for the operation that can be used by tools reading the output for further and easier manipulation. For example, Swagger-Codegen will use the nickname as the method name of the operation in the client it generates. The value MUST be alphanumeric and may include underscores. Whitespace characters are not allowed.
     */
    public $nickname;

    /**
     * @var SwaggerAuthorizationsObject
     * A list of authorizations required to execute this operation. While not mandatory, if used, it overrides the value given at the API Declaration's authorizations. In order to completely remove API Declaration's authorizations completely, an empty object ({}) may be applied.
     */
    public $authorizations;

    /**
     * @var SwaggerParameterObject[]
     * @required
     * The inputs to the operation. If no parameters are needed, an empty array MUST be included.
     */
    public $parameters;

    /**
     * @var SwaggerResponseMessageObject[]
     * Lists the possible response statuses that can return from the operation.
     */
    public $responseMessages;

    /**
     * @var string[]
     * A list of MIME types this operation can produce. This is overrides the global produces definition at the root of the API Declaration. Each string value SHOULD represent a MIME type.
     */
    public $produces;

    /**
     * @var string[]
     * A list of MIME types this operation can consume. This is overrides the global consumes definition at the root of the API Declaration. Each string value SHOULD represent a MIME type.
     */
    public $consumes;

    /**
     * @var string
     * Declares this operation to be deprecated. Usage of the declared operation should be refrained. Valid value MUST be either "true" or "false". Note: This field will change to type boolean in the future.
     */
    public $deprecated;
}

/**
 * Swagger Parameter Object
 * @link https://github.com/swagger-api/swagger-spec/blob/master/versions/1.2.md#524-parameter-object
 */
class SwaggerParameterObject extends Model
{
    /**
     * @var string
     * @required
     * The type of the parameter (that is, the location of the parameter in the request). The value MUST be one of these values: "path", "query", "body", "header", "form". Note that the values MUST be lower case.
     */
    public $paramType;

    /**
     * @var string
     * @required
     * The unique name for the parameter. Each name MUST be unique, even if they are associated with different paramType values. Parameter names are case sensitive.
     * If paramType is "path", the name field MUST correspond to the associated path segment from the path field in the API Object.
     * If paramType is "query", the name field corresponds to the query parameter name.
     * If paramType is "body", the name is used only for Swagger-UI and Swagger-Codegen. In this case, the name MUST be "body".
     * If paramType is "form", the name field corresponds to the form parameter key.
     * If paramType is "header", the name field corresponds to the header parameter key.
     */
    public $name;

    /**
     * @var string
     * Recommended. A brief description of this parameter.
     */
    public $description;

    /**
     * @var boolean
     * A flag to note whether this parameter is required. If this field is not included, it is equivalent to adding this field with the value false. If paramType is "path" then this field MUST be included and have the value true.
     */
    public $required;

    /**
     * @var boolean
     * Another way to allow multiple values for a "query" parameter. If used, the query parameter may accept comma-separated values. The field may be used only if paramType is "query", "header" or "path".
     */
    public $allowMultiple;
}

/**
 * Swagger Response Message Object
 * @link https://github.com/swagger-api/swagger-spec/blob/master/versions/1.2.md#525-response-message-object
 */
class SwaggerResponseMessageObject extends Model
{
    /**
     * @var integer
     * @required
     * The HTTP status code returned. The value SHOULD be one of the status codes as described in RFC 2616 - Section 10.
     */
    public $paramType;

    /**
     * @var string
     * @required
     * The explanation for the status code. It SHOULD be the reason an error is received if an error status code is used.
     */
    public $message;

    /**
     * @var string
     * The return type for the given response.
     */
    public $responseModel;
}

/**
 * Swagger Models Object
 * This type is not specific. It cannot be matched exactly.
 * @link https://github.com/swagger-api/swagger-spec/blob/master/versions/1.2.md#526-models-object
 */
class SwaggerModelsObject extends Model
{
    /**
     * @var integer
     * @required
     * The HTTP status code returned. The value SHOULD be one of the status codes as described in RFC 2616 - Section 10.
     */
    public $paramType;

    /**
     * @var string
     * @required
     * The explanation for the status code. It SHOULD be the reason an error is received if an error status code is used.
     */
    public $message;

    /**
     * @var string
     * The return type for the given response.
     */
    public $responseModel;
}